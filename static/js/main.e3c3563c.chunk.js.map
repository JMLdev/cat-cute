{"version":3,"sources":["Components/Heading.js","Components/Graph.js","Home.js","Utilities/ApiResult.js","Components/Carousel.js","Rate.js","List.js","App.js","serviceWorker.js","Components/Navigation.js","Components/Footer.js","index.js"],"names":["Heading","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","reactstrap_es","style","marginBottom","marginTop","props","heading","Component","Graph","Math","floor","tally","returnCute","color","returnCrap","Home","Fragment","Components_Heading","Components_Graph","sm","md","top","width","src","alt","Link","to","apiUrl","apiVoteUrl","apiGetVoteUrl","returnHeaders","axios","defaults","headers","CONTENT-TYPE","X-API-KEY","isCute","image_id","sub_id","yes_or_no","cat","post","CatCarousel","_this","call","state","activeIndex","next","bind","assertThisInitialized","previous","goToIndex","onExiting","onExited","animating","_this2","setTimeout","nextIndex","list","length","setState","_this3","newIndex","voteName","voteValue","catValue","_this4","individualCat","slides","map","className","tag","id","image","url","type","data-tag","onClick","event","API","updateCute","updateVoteCount","target","getAttribute","position","left","bottom","showVote","interval","Rate","Carousel","List","hotOrNot","vote","kitties","paddingRight","display","maxWidth","App","theCats","listCats","listVotes","1","0","cuteOrCrap","cute","get","then","res","data","catList","assign","subkey","hasOwnProperty","newTally","getCute","kitty","newValue","oldKitty","oldKittyValue","newKitty","console","log","Switch","Route","exact","path","render","src_Home","src_Rate","src_List","Boolean","window","location","hostname","match","Navigation","toggle","isOpen","light","expand","origin","navbar","Footer","href","height","viewBox","version","aria-hidden","fillRule","d","ReactDOM","BrowserRouter","Components_Navigation","src_App","Components_Footer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+QAkBeA,EAff,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGQ,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,MAAO,CAACC,aAAc,OAAQC,UAAW,SAC1CN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,UACKX,KAAKgB,MAAMC,eAPpCrB,EAAA,CAA6BsB,aC8BdC,uLA1BP,OAAOC,KAAKC,MAAMrB,KAAKgB,MAAMM,MAAM,IAAMtB,KAAKgB,MAAMM,MAAM,GAAKtB,KAAKgB,MAAMM,MAAM,IAAM,0CAKtF,OAAOF,KAAKC,MAAMrB,KAAKgB,MAAMM,MAAM,IAAMtB,KAAKgB,MAAMM,MAAM,GAAKtB,KAAKgB,MAAMM,MAAM,IAAM,sCAItF,OAEIb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,MAAO,CAACC,aAAc,SACvBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,4BAGAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUJ,MAAOR,KAAKuB,aAAcC,MAAO,YAC3Cf,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUJ,MAAOR,KAAKyB,aAAcD,MAAO,oBAvB3CN,aC+CLQ,mLAzCP,OACIjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMiB,SAAP,KACIlB,EAAAC,EAAAC,cAACiB,EAAD,CAASX,QAAQ,wBACjBR,EAAAC,EAAAC,cAACkB,EAAD,CAAOP,MAAOtB,KAAKgB,MAAMM,QACzBb,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACC,aAAc,SAAzB,4aAGRL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkB,GAAI,GAAIC,GAAI,GACbtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASoB,KAAG,EAACC,MAAM,OAAOC,IAAI,kCAAkCC,IAAI,cACpE1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,qBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,iCACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,0IACAH,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,GAAG,SACL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQY,MAAM,WAAd,gBAKhBf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkB,GAAI,GAAIC,GAAI,GACbtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASoB,KAAG,EAACC,MAAM,OAAOC,IAAI,kCAAkCC,IAAI,cACpE1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,yBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,+BACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,6FACAH,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,GAAG,SACL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQY,MAAM,WAAd,0BAjCjBN,8BCLboB,EAAS,wDACTC,EAAa,qCACbC,EAAgB,mDAEhBC,EAAgB,WAClB,OACIC,IAAMC,SAASC,QAAU,CACrBC,eAAgB,mBAChBC,YAAa,yCAuBlB,SAASC,EAAOC,EAAUC,EAAQC,GACrCT,IAEA,IAAMU,EAAM,CACRH,SAAYA,EACZC,OAAUA,EACVzC,MAAS0C,GAGbR,IAAMU,KAAKb,EAAYY,GChC3B,IAAMtC,EACQ,WADRA,EAEM,OAFNA,EAGU,MAHVA,EAIY,MA4HHwC,cAxHX,SAAAA,EAAYrC,GAAO,IAAAsC,EAAA,OAAAxD,OAAAC,EAAA,EAAAD,CAAAE,KAAAqD,IACfC,EAAAxD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuD,GAAAE,KAAAvD,KAAMgB,KACDwC,MAAQ,CACTC,YAAa,GAEjBH,EAAKI,KAAOJ,EAAKI,KAAKC,KAAV7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAwD,KACZA,EAAKO,SAAWP,EAAKO,SAASF,KAAd7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAwD,KAChBA,EAAKQ,UAAYR,EAAKQ,UAAUH,KAAf7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAwD,KACjBA,EAAKS,UAAYT,EAAKS,UAAUJ,KAAf7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAwD,KACjBA,EAAKU,SAAWV,EAAKU,SAASL,KAAd7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAwD,KATDA,2EAaftD,KAAKiE,WAAY,qCAIjBjE,KAAKiE,WAAY,iCAGd,IAAAC,EAAAlE,KACHmE,WACI,WACI,IAAID,EAAKD,UAAT,CACA,IAAMG,EAAYF,EAAKV,MAAMC,cAAgBS,EAAKlD,MAAMqD,KAAKC,OAAS,EAAI,EAAIJ,EAAKV,MAAMC,YAAc,EACvGS,EAAKK,SAAS,CAAEd,YAAaW,MAC9B,wCAIA,IAAAI,EAAAxE,KACPmE,WACI,WACI,IAAIK,EAAKP,UAAT,CACA,IAAMG,EAAuC,IAA3BI,EAAKhB,MAAMC,YAAoBe,EAAKxD,MAAMqD,KAAKC,OAAS,EAAIE,EAAKhB,MAAMC,YAAc,EACvGe,EAAKD,SAAS,CAAEd,YAAaW,MAC9B,uCAIDK,GACFzE,KAAKiE,WACTjE,KAAKuE,SAAS,CAAEd,YAAagB,qCAGxBC,EAAUC,GACf,GAAID,IAAaC,EACb,MAAO,2CAIJC,EAAUpE,GACboE,IAAapE,IACC,IAAVA,GACAR,KAAKgB,MAAMM,MAAM,GAAKtB,KAAKgB,MAAMM,MAAM,GAAK,EAC5CtB,KAAKgB,MAAMM,MAAM,GAAKtB,KAAKgB,MAAMM,MAAM,GAAK,GAE7B,IAAVd,IACLR,KAAKgB,MAAMM,MAAM,GAAKtB,KAAKgB,MAAMM,MAAM,GAAK,EAC5CtB,KAAKgB,MAAMM,MAAM,GAAKtB,KAAKgB,MAAMM,MAAM,GAAK,qCAK/C,IAAAuD,EAAA7E,KACGyD,EAAgBzD,KAAKwD,MAArBC,YACJqB,GAAiB,EACfC,EAAS/E,KAAKgB,MAAMqD,KAAKW,IAAI,SAAC7B,GAEhC,OADA2B,IAEIrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACAqE,UAAU,aACVC,IAAI,MACJ3E,IAAK4C,EAAIgC,GACTpB,UAAWc,EAAKd,UAChBC,SAAUa,EAAKb,UAEXvD,EAAAC,EAAAC,cAAA,OAAKuB,IAAKiB,EAAIiC,MAAMC,IAAKlD,IAAKgB,EAAIiC,MAAMD,GAAItE,MAAO,CAACoB,MAAO,UAG3DxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ0E,KAAK,SAAS9D,MAAO,SAAU+D,WAAUT,EACjDU,QAAS,SAACC,GAAWC,EAAWvC,EAAIiC,MAAMD,GAAIhC,EAAIF,OAAO,KAAM4B,EAAKc,WAAWxC,EAAI3C,MAAO,GAAKqE,EAAK7D,MAAM4E,gBAAgBH,EAAMI,OAAOC,aAAa,YAAa,GAAIjB,EAAKnB,QAC1K7C,MAAO,CAACkF,SAAUlF,EAAgBmF,KAAMnF,EAAoBoF,OAAQpF,GAAeoE,UAAWJ,EAAKqB,SAAS/C,EAAI3C,MAAO,IAFvH,QAMAC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ0E,KAAK,SAAS9D,MAAO,UAAW+D,WAAUT,EAClDU,QAAS,SAACC,GAAWC,EAAWvC,EAAIiC,MAAMD,GAAIhC,EAAIF,OAAQ,KAAM4B,EAAKc,WAAWxC,EAAI3C,MAAO,GAAKqE,EAAK7D,MAAM4E,gBAAgBH,EAAMI,OAAOC,aAAa,YAAa,GAAIjB,EAAKnB,QAC3K7C,MAAO,CAACkF,SAAUlF,EAAgBmF,KAAMnF,EAAkBoF,OAAQpF,GAAeoE,UAAWJ,EAAKqB,SAAS/C,EAAI3C,MAAO,IAFrH,WASZ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uLASAF,EAAAC,EAAAC,cAACkB,EAAD,CAAOP,MAAOtB,KAAKgB,MAAMM,QACzBb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI6C,YAAaA,EACbC,KAAM1D,KAAK0D,KACXG,SAAU7D,KAAK6D,SACfsC,UAAU,GAETpB,WAlHK7D,aCIXkF,mLAbP,OACI3F,EAAAC,EAAAC,cAACF,EAAAC,EAAMiB,SAAP,KACIlB,EAAAC,EAAAC,cAACiB,EAAD,CAASX,QAAQ,qBACjBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkB,GAAI,IACLrB,EAAAC,EAAAC,cAAC0F,EAAD,CAAUhC,KAAMrE,KAAKgB,MAAMqD,KAAM/C,MAAOtB,KAAKgB,MAAMM,MAAOsE,gBAAiB5F,KAAKgB,MAAM4E,4BAP3F1E,aCgCJoF,6MA9BXC,SAAW,SAACC,GACR,GAAa,IAATA,EACA,MAAO,mFAIN,IAAAtC,EAAAlE,KACCyG,EAAUzG,KAAKgB,MAAMqD,KAAKW,IAAI,SAAC7B,GACjC,OACI1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeL,IAAK4C,EAAIiC,MAAMD,GAAI3D,MAAO0C,EAAKqC,SAASpD,EAAI3C,QACvDC,EAAAC,EAAAC,cAAA,OAAKuB,IAAKiB,EAAIiC,MAAMC,IAAKlD,IAAKgB,EAAIiC,MAAMD,GAAItE,MAAO,CAAC6F,aAAc,OAAQC,QAAS,eAAgBC,SAAU,WAC7GnG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMsE,UAAU,YAAY9B,EAAIiC,MAAMD,QAIrD,OACI1E,EAAAC,EAAAC,cAACF,EAAAC,EAAMiB,SAAP,KACIlB,EAAAC,EAAAC,cAACkB,EAAD,CAAOP,MAAOtB,KAAKgB,MAAMM,QACzBb,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWqE,UAAU,YACfwB,aAvBXvF,aCwGJ2F,cAnGX,SAAAA,EAAY7F,GAAO,IAAAsC,EAAA,OAAAxD,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,IACfvD,EAAAxD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAAtD,KAAAvD,KAAMgB,KACDwC,MAAQ,CACTsD,QAAS,GACTC,SAAU,GACVC,UAAW,GACX1F,MAAO,CACH2F,EAAG,EACHC,EAAG,IAGX5D,EAAKsC,gBAAkBtC,EAAKsC,gBAAgBjC,KAArB7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAwD,KAXRA,uEAcX6D,GACJ,IAAIC,EAAO,EACX,IAAK,IAAI7G,KAAOP,KAAKwD,MAAMwD,UACJ,qBAARzG,GACHP,KAAKwD,MAAMwD,UAAUzG,GAAKC,QAAU2G,GACpCC,IAIZ,OAAOA,+CAGU,IAAAlD,EAAAlE,MJrBrByC,IAGOC,IAAM2E,IAAI/E,IImBCgF,KAAK,SAAAC,GACfrD,EAAKK,SAAS,CACVuC,QAAUS,EAAIC,KACdT,SAAUQ,EAAIC,UJK1B/E,IAcOC,IAAM2E,IAAI7E,IIhBE8E,KAAK,SAAAC,GAChBrD,EAAKK,SAAS,CACVyC,UAAWO,EAAIC,SAEpBF,KAAK,WACJ,IAAIG,EAAU3H,OAAO4H,OAAO,GAAIxD,EAAKV,MAAMuD,UAE3C,IAAK,IAAIxG,KAAO2D,EAAKV,MAAMwD,UAEvB,IAAK,IAAIW,KAAUzD,EAAKV,MAAMwD,UAC1B,GAAI9C,EAAKV,MAAMwD,UAAUY,eAAeD,IACW,qBAApCzD,EAAKV,MAAMwD,UAAUzG,GAAKC,MAAuB,CACxD,IAAI2E,EAAKjB,EAAKV,MAAMwD,UAAUzG,GAAKyC,SAC/BwD,EAAOtC,EAAKV,MAAMwD,UAAUzG,GAAKC,MACrC,IAAK,IAAID,KAAOkH,EAEZ,IAAK,IAAIE,KAAUF,EACXA,EAAQlH,GAAKyC,WAAamC,IAC1BsC,EAAQlH,GAAKC,MAAQgG,GASjDtC,EAAKK,SAAS,CAAEwC,SAAWU,IAE3B,IAAII,EAAW,CACXZ,EAAG/C,EAAK4D,QAAQ,GAChBZ,EAAGhD,EAAK4D,QAAQ,IAGpB5D,EAAKK,SAAS,CAAEjD,MAAQuG,8CAIhBE,EAAOC,GACnB,IAAIC,EAAWjI,KAAKwD,MAAMsD,QAAQiB,GAC9BG,EAAgBD,EAASzH,MACzB2H,EAAWF,EAASzH,MAAQwH,EAC5BE,IAAkBF,GAClBhI,KAAKuE,SAAS,CAAC0D,SAAUE,IAE7BC,QAAQC,IAAIrI,KAAKwD,MAAMsD,QAAQiB,GAAOvH,wCAGjC,IAAAgE,EAAAxE,KACL,OACIS,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACI7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IACdC,OAAQ,SAAC1H,GAAD,OAAWP,EAAAC,EAAAC,cAACgI,EAAD7I,OAAA4H,OAAA,GAAU1G,EAAV,CAAiBqD,KAAMG,EAAKhB,MAAMsD,QAASxF,MAAOkD,EAAKhB,MAAMlC,YAEpFb,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAK,QACRC,OAAQ,SAAC1H,GAAD,OAAWP,EAAAC,EAAAC,cAACiI,EAAD9I,OAAA4H,OAAA,GAAU1G,EAAV,CAAiBqD,KAAMG,EAAKhB,MAAMsD,QAASxF,MAAOkD,EAAKhB,MAAMlC,MAAOsE,gBAAiBpB,EAAKoB,sBAEjHnF,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIE,KAAK,QACLC,OAAQ,SAAC1H,GAAD,OAAWP,EAAAC,EAAAC,cAACkI,EAAD/I,OAAA4H,OAAA,GAAU1G,EAAV,CAAiBqD,KAAMG,EAAKhB,MAAMsD,QAASxF,MAAOkD,EAAKhB,MAAMlC,oBA9FlFJ,qBCGE4H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCoCSC,cAxCX,SAAAA,EAAYnI,GAAO,IAAAsC,EAAA,OAAAxD,OAAAC,EAAA,EAAAD,CAAAE,KAAAmJ,IACf7F,EAAAxD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqJ,GAAA5F,KAAAvD,KAAMgB,KAEDoI,OAAS9F,EAAK8F,OAAOzF,KAAZ7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAwD,KACdA,EAAKE,MAAQ,CACT6F,QAAQ,GALG/F,wEASftD,KAAKuE,SAAS,CACV8E,QAASrJ,KAAKwD,MAAM6F,0CAIxB,OACI5I,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQY,MAAM,QAAQ8H,OAAK,EAACC,OAAO,MAC/B9I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAasE,IAAK9C,IAAMC,GAAG,KAAI5B,EAAAC,EAAAC,cAAA,OAAKuB,IAAK6G,OAAOC,SAASQ,OAAS,mBAAoBrH,IAAI,uBAC1F1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAe4E,QAASxF,KAAKoJ,SAC7B3I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUyI,OAAQrJ,KAAKwD,MAAM6F,OAAQI,QAAM,GACvChJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqE,UAAU,UAAUwE,QAAM,GAC3BhJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsE,IAAK9C,IAAMC,GAAG,KAAvB,SAEJ5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsE,IAAK9C,IAAMC,GAAG,SAAvB,SAEJ5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsE,IAAK9C,IAAMC,GAAG,SAAvB,qBA9BXnB,aC8BVwI,mLAnCP,OACIjJ,EAAAC,EAAAC,cAAA,OAAKsE,UAAU,UACXxE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS+I,KAAK,sCACVlJ,EAAAC,EAAAC,cAAA,OAAKiJ,OAAO,KAAK3E,UAAU,8BAA8B4E,QAAQ,YAAYC,QAAQ,MAAM7H,MAAM,KAAK8H,cAAY,QAC9GtJ,EAAAC,EAAAC,cAAA,QAAMqJ,SAAS,UAAUC,EAAE,kkBAKvCxJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsE,IAAK9C,IAAMC,GAAG,KAAvB,SAEJ5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsE,IAAK9C,IAAMC,GAAG,SAAvB,SAEJ5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsE,IAAK9C,IAAMC,GAAG,SAAvB,SAEJ5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,iDAzBXM,mBCOrBgJ,IAASxB,OACLjI,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,KACI1J,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyJ,EAAD,MACA3J,EAAAC,EAAAC,cAAC0J,EAAD,MACA5J,EAAAC,EAAAC,cAAC2J,EAAD,QAEUC,SAASC,eAAe,SH6GxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.e3c3563c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nexport class Heading extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Row style={{marginBottom: '44px', marginTop: \"24px\"}}>\r\n                <Col>\r\n                    <h1>\r\n                        {this.props.heading}\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Heading;","import React, { Component } from 'react';\r\nimport { Row, Col, Progress } from 'reactstrap';\r\n\r\nclass Graph extends Component {\r\n\r\n    // returns the number of cute cats out of the list. 1 is cute, 0 is not\r\n    returnCute() {\r\n        return Math.floor(this.props.tally[1] / (this.props.tally[1] + this.props.tally[0]) * 100)\r\n    }\r\n\r\n    // returns the number of crappy cats\r\n    returnCrap() {\r\n        return Math.floor(this.props.tally[0] / (this.props.tally[1] + this.props.tally[0]) * 100)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <Row style={{marginBottom: '24px'}}>\r\n                <Col>\r\n                    <h2>\r\n                        Status so far:\r\n                    </h2>\r\n                    <div>Cute</div>\r\n                    <Progress value={this.returnCute()} color={\"success\"} />\r\n                    <div>Crap</div>\r\n                    <Progress value={this.returnCrap()} color={\"danger\"} />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Graph;","import React, { Component } from 'react';\r\nimport { Row, Col, Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Heading from './Components/Heading';\r\nimport Graph from './Components/Graph';\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Heading heading='Cats, cute or crap?' />\r\n                <Graph tally={this.props.tally} />\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{marginBottom: '24px'}}>Cat ipsum dolor sit amet, sleep but scratch my tummy actually i hate you now fight me. Sleep everywhere, but not in my bed flop over scratch my tummy actually i hate you now fight me curl into a furry donut. Chase after silly colored fish toys around the house scratch my tummy actually i hate you now fight me and human clearly uses close to one life a night no one naps that long so i revive by standing on chestawaken! </p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={12} md={6}>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src=\"https://placekitten.com/318/180\" alt=\"Cat image\" />\r\n                            <CardBody>\r\n                                <CardTitle>Cute or Not?</CardTitle>\r\n                                <CardSubtitle>Vote on pictures of cats</CardSubtitle>\r\n                                <CardText>Cute, or the next ugly cat meme? You be the judge. Browse through images of cats and determine which are cute and which are crap.</CardText>\r\n                                <Link to=\"/rate\">\r\n                                    <Button color=\"primary\">Vote Now</Button>\r\n                                </Link>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12} md={6}>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src=\"https://placekitten.com/318/181\" alt=\"Cat image\" />\r\n                            <CardBody>\r\n                                <CardTitle>Index of Results</CardTitle>\r\n                                <CardSubtitle>See a list of kitties.</CardSubtitle>\r\n                                <CardText>How did they fare? Find out now. Easily browse the kitty cats and see their ranking.</CardText>\r\n                                <Link to=\"/list\">\r\n                                    <Button color=\"success\">View List</Button>\r\n                                </Link>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst apiUrl = 'https://api.thecatapi.com/v1/favourites?sub_id=imfm4j'\r\nconst apiVoteUrl = 'https://api.thecatapi.com/v1/votes'\r\nconst apiGetVoteUrl = 'https://api.thecatapi.com/v1/votes?sub_id=imfm4j'\r\n\r\nconst returnHeaders = () => {\r\n    return (\r\n        axios.defaults.headers = {\r\n            'CONTENT-TYPE': 'APPLICATION/JSON',\r\n            'X-API-KEY': 'D70CED34-3597-4AA8-AD8C-2861CBE8452C'\r\n        }\r\n    )\r\n}\r\n\r\nexport function  getCats(){\r\n    returnHeaders();\r\n\r\n    // GET THE LIST OF CATS \r\n    return axios.get(apiUrl)\r\n\r\n    // returns \r\n    // {\r\n    //     created_at: \"2018-12-06T18:19:12.000Z\",\r\n    //     id: 4124,\r\n    //     image: {id: \"bod\", url: \"https://cdn2.thecatapi.com/images/bod.jpg\"},\r\n    //     image_id: \"bod\",\r\n    //     sub_id: \"imfm4j\",\r\n    //     user_id: \"imfm4j\"\r\n    // }\r\n}\r\n\r\n// Post Api for Voting\r\nexport function isCute(image_id, sub_id, yes_or_no){\r\n    returnHeaders();\r\n\r\n    const cat = {\r\n        \"image_id\": image_id,\r\n        \"sub_id\": sub_id,\r\n        \"value\": yes_or_no\r\n      };\r\n\r\n    axios.post(apiVoteUrl, cat);\r\n}\r\n\r\nexport function getVotes() {\r\n    returnHeaders();\r\n\r\n    // GET THE VOTES \r\n    /* Result includes following parameters: (example)\r\n        {\r\n            \"country_code\": null,\r\n            \"created_at\": \"2018-12-06T18:54:11.000Z\",\r\n            \"id\": 47294,\r\n            \"image_id\": \"9ccXTANkb\",\r\n            \"sub_id\": \"imfm4j\",\r\n            \"value\": 1\r\n         },\r\n         We need to use value for vote (1 or 0) and image_id and sub_id to map with the testcats[] list\r\n    */\r\n    return axios.get(apiGetVoteUrl)\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Carousel,\r\n    CarouselItem,\r\n    Button\r\n} from 'reactstrap';\r\nimport Graph from './Graph';\r\n\r\nimport * as API from './../Utilities/ApiResult';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    bottom: '40px',\r\n    voteUpLeft: '54%',\r\n    voteDownLeft: '40%'\r\n}\r\n\r\nclass CatCarousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: 0 \r\n        };\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n        this.goToIndex = this.goToIndex.bind(this);\r\n        this.onExiting = this.onExiting.bind(this);\r\n        this.onExited = this.onExited.bind(this);\r\n    }\r\n\r\n    onExiting() {\r\n        this.animating = true;\r\n    }\r\n\r\n    onExited() {\r\n        this.animating = false;\r\n    }\r\n\r\n    next() {\r\n        setTimeout(\r\n            ()=> {\r\n                if (this.animating) return;\r\n                const nextIndex = this.state.activeIndex === this.props.list.length - 1 ? 0 : this.state.activeIndex + 1;\r\n                this.setState({ activeIndex: nextIndex });\r\n            }, 1000\r\n        )\r\n    }\r\n\r\n    previous() {\r\n        setTimeout(\r\n            ()=> {\r\n                if (this.animating) return;\r\n                const nextIndex = this.state.activeIndex === 0 ? this.props.list.length - 1 : this.state.activeIndex - 1;\r\n                this.setState({ activeIndex: nextIndex });\r\n            }, 1000\r\n        )\r\n    }\r\n\r\n    goToIndex(newIndex) {\r\n        if (this.animating) return;\r\n        this.setState({ activeIndex: newIndex });\r\n    }\r\n\r\n    showVote(voteName, voteValue) {\r\n        if (voteName === voteValue) {\r\n            return 'focus';\r\n        }\r\n    }\r\n\r\n    updateCute(catValue, value) {\r\n        if (catValue !== value) {\r\n            if (value === 1) {\r\n                this.props.tally[1] = this.props.tally[1] + 1;\r\n                this.props.tally[0] = this.props.tally[0] - 1;\r\n            }\r\n            else if (value === 0) {\r\n                this.props.tally[0] = this.props.tally[0] + 1;\r\n                this.props.tally[1] = this.props.tally[1] - 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { activeIndex } = this.state;\r\n        let individualCat = -1;\r\n        const slides = this.props.list.map((cat) => {\r\n            individualCat++;\r\n            return (\r\n                <CarouselItem\r\n                className=\"custom-tag\"\r\n                tag=\"div\"\r\n                key={cat.id}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n                >\r\n                    <img src={cat.image.url} alt={cat.image.id} style={{width: \"100%\"}} />\r\n                    {/* Not able to view the button for voting. We need to pass parameters for the post api call */}\r\n                    \r\n                    <Button type=\"button\" color={'danger'} data-tag={individualCat} \r\n                    onClick={(event) => {API.isCute(cat.image.id, cat.sub_id,'0'); this.updateCute(cat.value, 0);  this.props.updateVoteCount(event.target.getAttribute('data-tag'), 0); this.next();}} \r\n                    style={{position: style.position, left: style.voteDownLeft, bottom: style.bottom}} className={this.showVote(cat.value, 0)} >\r\n                        Crap\r\n                    </Button>\r\n\r\n                    <Button type=\"button\" color={'success'} data-tag={individualCat}\r\n                    onClick={(event) => {API.isCute(cat.image.id, cat.sub_id, '1'); this.updateCute(cat.value, 1);  this.props.updateVoteCount(event.target.getAttribute('data-tag'), 1); this.next(); }} \r\n                    style={{position: style.position, left: style.voteUpLeft, bottom: style.bottom}} className={this.showVote(cat.value, 1)} >\r\n                        Cute\r\n                    </Button>\r\n                </CarouselItem>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <style>\r\n                    {\r\n                    `.custom-tag {\r\n                        max-width: 100%;\r\n                        height: 500px;\r\n                        background: black;\r\n                        }`\r\n                    }\r\n                </style>\r\n                <Graph tally={this.props.tally} />\r\n                <Carousel\r\n                    activeIndex={activeIndex}\r\n                    next={this.next}\r\n                    previous={this.previous}\r\n                    interval={false}\r\n                >\r\n                    {slides}\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CatCarousel;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport Heading from './Components/Heading';\r\nimport Carousel from './Components/Carousel';\r\n\r\nclass Rate extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Heading heading='Rate the kitties' />\r\n                <Row>\r\n                    <Col sm={12} >\r\n                        <Carousel list={this.props.list} tally={this.props.tally} updateVoteCount={this.props.updateVoteCount} />\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rate;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nimport Graph from './Components/Graph';\r\n\r\nclass List extends Component {\r\n\r\n    hotOrNot = (vote) => {\r\n        if (vote === 1) {\r\n            return 'success';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const kitties = this.props.list.map((cat) => {\r\n            return (\r\n                <ListGroupItem key={cat.image.id} color={this.hotOrNot(cat.value)} >\r\n                    <img src={cat.image.url} alt={cat.image.id} style={{paddingRight: '20px', display: 'inline-block', maxWidth: '150px'}} />\r\n                    <p><span className=\"cat-name\">{cat.image.id}</span></p>\r\n                </ListGroupItem>\r\n            )\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <Graph tally={this.props.tally} />\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup className=\"cat-list\">\r\n                            { kitties }\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List;","/*eslint no-unused-vars: 0*/\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nimport Home from './Home';\r\nimport Rate from './Rate';\r\nimport List from './List';\r\nimport * as API from './Utilities/ApiResult';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            theCats: [],\r\n            listCats: {},\r\n            listVotes: {},\r\n            tally: {\r\n                1: 0,\r\n                0: 0\r\n            }\r\n        };\r\n        this.updateVoteCount = this.updateVoteCount.bind(this);\r\n    }\r\n    // get the total votes for cute or crap\r\n    getCute(cuteOrCrap) {\r\n        let cute = 0;\r\n        for (let key in this.state.listVotes) {\r\n            if (typeof key !== \"undefined\") {\r\n                if (this.state.listVotes[key].value === cuteOrCrap) {\r\n                    cute++;\r\n                }\r\n            }\r\n        }\r\n        return cute;\r\n    }\r\n\r\n    componentWillMount() {\r\n        API.getCats().then(res => {\r\n            this.setState({ \r\n                theCats : res.data,\r\n                listCats: res.data\r\n            });\r\n        });\r\n        API.getVotes().then(res => {\r\n            this.setState({\r\n                listVotes: res.data\r\n            });\r\n        }).then(() => {\r\n            let catList = Object.assign({}, this.state.listCats)\r\n            // loop the top level objects\r\n            for (let key in this.state.listVotes) {\r\n                // loop each key\r\n                for (let subkey in this.state.listVotes) {\r\n                    if (this.state.listVotes.hasOwnProperty(subkey)) {\r\n                        if (typeof this.state.listVotes[key].value !== 'undefined') {\r\n                            let id = this.state.listVotes[key].image_id;\r\n                            let vote = this.state.listVotes[key].value;\r\n                            for (let key in catList) {\r\n                                // eslint-disable-next-line\r\n                                for (let subkey in catList) {\r\n                                    if (catList[key].image_id === id) {\r\n                                        catList[key].value = vote;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // set the state to new object with merged values\r\n            this.setState({ listCats : catList })\r\n            // create a new object for tally\r\n            let newTally = {\r\n                1: this.getCute(1),\r\n                0: this.getCute(0)\r\n            }\r\n            // set the tally to the new values\r\n            this.setState({ tally : newTally });\r\n        })\r\n    }\r\n\r\n    updateVoteCount(kitty, newValue) {\r\n        let oldKitty = this.state.theCats[kitty];\r\n        let oldKittyValue = oldKitty.value;\r\n        let newKitty = oldKitty.value = newValue;\r\n        if (oldKittyValue !== newValue) {\r\n            this.setState({oldKitty: newKitty})\r\n        }\r\n        console.log(this.state.theCats[kitty].value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/' \r\n                    render={(props) => <Home {...props} list={this.state.theCats} tally={this.state.tally} />}\r\n                />\r\n                <Route path='/rate' \r\n                    render={(props) => <Rate {...props} list={this.state.theCats} tally={this.state.tally} updateVoteCount={this.updateVoteCount} />}\r\n                />\r\n                <Route \r\n                    path='/list' \r\n                    render={(props) => <List {...props} list={this.state.theCats} tally={this.state.tally} />}\r\n                />\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Col,\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row } from 'reactstrap';\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n      }\r\n      toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n      }\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <Navbar color=\"light\" light expand=\"md\">\r\n                        <NavbarBrand tag={Link} to=\"/\"><img src={window.location.origin + '/images/logo.png'} alt=\"Cats website logo\"/></NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to=\"/rate\">Rate</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to=\"/list\">List</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"footer\">\r\n                <Row>\r\n                    <Col>\r\n                        <Nav>\r\n                            <NavItem>\r\n                                <NavLink href=\"https://github.com/JMLdev/cat-cute\">\r\n                                    <svg height=\"24\" className=\"octicon octicon-mark-github\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" aria-hidden=\"true\">\r\n                                        <path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\">\r\n                                        </path>\r\n                                    </svg>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} to=\"/rate\">Rate</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} to=\"/list\">List</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink>\r\n                                    © 2018 - Crappy Cute Cats\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport Navigation from './Components/Navigation';\r\nimport Footer from './Components/Footer';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Container>\r\n            <Navigation />\r\n            <App />\r\n            <Footer />\r\n        </Container>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}